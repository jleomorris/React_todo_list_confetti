{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js"],"names":["Todo","task","toggleTodo","className","type","checked","complete","onChange","id","name","dateAdded","dateCompleted","TodoList","tasks","map","key","LOCAL_STORAGE_KEY","ALL_SELECTED","deletedTasks","allSelected","App","console","info","useState","setTasks","taskNameRef","useRef","generateConfetti","document","querySelector","style","zIndex","confetti","ConfettiGenerator","target","max","render","setTimeout","clear","handleDateCalculation","today","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","useEffect","storedTasks","JSON","parse","localStorage","getItem","savedAllSelected","getElementsByClassName","background","coolImages","one","setItem","stringify","getDay","styleDay","getElementById","border","paddingTop","applyDayStyling","Container","fluid","height","minHeight","backgroundSize","Row","Card","margin","Header","position","right","borderRadius","title","icon","faTrashAlt","size","onClick","newTasks","filter","faUndoAlt","length","allTasks","faCheckSquare","unCheckedTasks","forEach","checkedTasks","Body","Title","Text","ref","placeholder","onKeyPress","event","e","current","value","prevTasks","uuidv4","handleAddTodo","selectedTask","find","Footer","faAward","color","ReactDOM"],"mappings":"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","file":"static/js/main.154ea150.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Todo({ task, toggleTodo }) {\n  function handleTodoClick() {\n    toggleTodo(task.id)\n  }\n  \n  return (\n      <label className=\"to-do-item m-2\">\n        <input className=\"m-2\" type=\"checkbox\" checked={task.complete} onChange={handleTodoClick} />\n        {/* {task.name} <br /> <span>Added - {task.dateAdded}</span> | <span>Completed - {task.dateCompleted}</span> */}\n        {task.name} <br /> <span>Added - {task.dateAdded}</span> <span>{task.dateCompleted ? `| Completed - ${task.dateCompleted}` : ''}</span>\n        <hr />\n      </label>\n  )\n}\n","import React from 'react'\nimport Todo from './Todo'\n\nexport default function TodoList({ tasks, toggleTodo }) {\n  return (\n    tasks.map(task => {\n      return <Todo key={task.id} task={task} toggleTodo={toggleTodo}/>\n    })\n  )\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport uuidv4 from 'uuid/v4';\nimport { Container, Row } from 'react-bootstrap'\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport coolImages from 'cool-images';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt, faUndoAlt, faCheckSquare, faAward } from '@fortawesome/free-solid-svg-icons'\nimport './main.css'\nimport ConfettiGenerator from \"confetti-js\";\n\n\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\nconst ALL_SELECTED = 'todoApp.allSelected'; \n\nlet deletedTasks = null;\nlet allSelected = false;\n\nfunction App() {\n  console.info(\"allSelected on app render: \", allSelected);\n  const [tasks, setTasks] = useState([]);\n  const taskNameRef = useRef();\n\n  function setBackgroundRandom(){\n    document.getElementsByClassName(\"container-fluid\")[0].style.background = `url(${coolImages.one(1080, 1920)})`;\n  }\n\n  // Render stored tasks if they exist\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    const savedAllSelected = JSON.parse(localStorage.getItem(ALL_SELECTED));\n    if (savedAllSelected) {\n      allSelected = savedAllSelected;\n    } \n    if (storedTasks) setTasks(storedTasks);\n\n    setBackgroundRandom(); \n\n  }, []) // Using [] means the above only gets trigerred on initial render\n\n  // Every time [tasks] change\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(tasks));\n    localStorage.setItem(ALL_SELECTED, (allSelected));\n    applyDayStyling();\n  }, [tasks])\n\n  function toggleTodo(id) {\n    const allTasks = [...tasks];\n    const selectedTask = allTasks.find(task => task.id === id);\n    selectedTask.complete = !selectedTask.complete;\n    selectedTask.dateCompleted ? selectedTask.dateCompleted = null : selectedTask.dateCompleted = handleDateCalculation();\n    setTasks(allTasks);\n    if(tasks.filter(task => task.complete).length ===tasks.length){\n      generateConfetti();\n    }\n  }\n\n  function generateConfetti() {\n    document.querySelector(\"#my-canvas\").style.zIndex = 3;    \n    let confettiSettings = { target: 'my-canvas', max : 1000};\n    let confetti = new ConfettiGenerator(confettiSettings);\n    confetti.render();\n    \n    setTimeout(function(){\n      document.querySelector(\"#my-canvas\").style.zIndex = 1;    \n      confetti.clear();\n    }, 4000);\n  }\n\n  function handleAddTodo(e) {\n    const name = taskNameRef.current.value\n    if (name === '') return\n    setTasks(prevTasks => {\n      return [...prevTasks, { id: uuidv4(), name: name, complete: false, dateAdded: handleDateCalculation(), dateCompleted: null} ]\n    })\n    taskNameRef.current.value = null\n  }\n\n  function handleClearTodos() {\n    const newTasks = tasks.filter(task => !task.complete);\n    deletedTasks = tasks.filter(task => task.complete);\n    setTasks(newTasks);\n  }\n\n  function restoreClearedTasks() {\n    // alert(\"tasks restored\")\n    if(deletedTasks === null || deletedTasks.length === 0 ) return;\n    const allTasks = [...deletedTasks, ...tasks]\n    setTasks(allTasks);\n    deletedTasks = [];\n  }\n\n  let containerStyle = {\n    height: '100%',\n    minHeight: '100vh',\n    backgroundSize: 'cover !important'\n  }\n\n  function handleKeyPress(event) {\n    if (event.key === \"Enter\") {\n      handleAddTodo();\n    }\n  }\n\n  function handleDateCalculation() {\n    let today = new Date();\n    let year = today.getFullYear();\n    let month = today.getMonth() + 1 < 10 ? `0${today.getMonth() + 1}` : today.getMonth() + 1; \n    let day = today.getDate();\n    let hours = today.getHours() < 10 ? `0${today.getHours()}` : today.getHours();\n    let minutes = today.getMinutes() < 10 ? `0${today.getMinutes()}` : today.getMinutes();\n\n    let date = `${day}/${(month)}/${year} - ${hours}:${minutes}`;\n\n    return(date);\n  }\n\n  function handleCheckAll() {\n    if(allSelected === true) {\n      let unCheckedTasks = [...tasks];\n      unCheckedTasks.forEach(task => {\n        task.complete = false;\n        task.dateCompleted = null;\n      })\n      setTasks(unCheckedTasks);\n    } \n    \n    if(allSelected === false) {\n      let checkedTasks = [...tasks];\n      checkedTasks.forEach(task => {\n        task.complete = true;\n        task.dateCompleted = handleDateCalculation();\n      })\n      setTasks(checkedTasks);\n      generateConfetti();\n    }\n\n    allSelected = !allSelected;    \n  }\n\n  function date_diff_in_days(date1, date2) {\n    let dt1 = new Date(date1);\n    let dt2 = new Date(date2);\n    return Math.floor((Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) - Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate()) ) /(1000 * 60 * 60 * 24));\n  }\n\n  function applyDayStyling() {    \n    let day = new Date().getDay();\n\n    switch(day) {\n      case 1:\n        styleDay('monday');\n        break;\n      case 2:\n        styleDay('tuesday');\n        break;\n      case 3:\n        styleDay('wednesday');\n        break;\n        case 4:\n          styleDay('thursday');\n        break;\n        case 5:\n          styleDay('friday');\n        break;\n      case 6:\n        styleDay('saturday');\n        break;\n      case 7:\n        styleDay('sunday');\n        break;\n      default:\n        return;\n    }\n    \n    function styleDay(day) {\n      document.getElementById(day).style.border = '2px solid black';\n      document.getElementById(day).style.paddingTop = '6px';\n    }\n    \n  }\n\n  return (\n    <>\n    <canvas id=\"my-canvas\"></canvas>\n    <Container fluid className=\"d-flex justify-content-center align-items-center\" style = { containerStyle }>\n      <div className=\"background-cover\"></div>\n      <Row className=\"w-100 d-flex justify-content-center\">\n      <Card className=\"to-do-list col-md-4 p-0 border-0\" style = {{ margin: '5%' }}>\n        <Card.Header className=\"d-flex justify-content-between\">\n          <div className=\"days d-flex justify-content-between\">\n          <p className=\"date-header\" id=\"monday\">M</p>\n          <p className=\"date-header\" id=\"tuesday\">T</p>\n          <p className=\"date-header\" id=\"wednesday\">W</p>\n          <p className=\"date-header\" id=\"thursday\">T</p>\n          <p className=\"date-header\" id=\"friday\">F</p>\n          <p className=\"date-header\" id=\"saturday\">S</p>\n          <p className=\"date-header\" id=\"sunday\">S</p>\n          </div>\n          <p className=\"date-header date\">{handleDateCalculation()}</p>\n        </Card.Header>\n        <Container>\n        <Row>\n        <div className=\"buttons d-flex flex-column col-2\" style={{ background: 'rgb(99 99 154)', position: 'relative', right: '1rem', borderRadius: '8px 0 0 8px' }}>\n            <FontAwesomeIcon title=\"delete selected tasks\" className=\"trash-icon\" icon={faTrashAlt} size=\"2x\" onClick={handleClearTodos} style={{ margin: '20px auto' }} />  \n            <FontAwesomeIcon title=\"undo delete\" className=\"trash-icon\" icon={faUndoAlt} size=\"2x\" onClick={restoreClearedTasks} style={{ margin: '20px auto' }} />  \n            <FontAwesomeIcon title=\"select/unselect all tasks\" className=\"trash-icon\" icon={faCheckSquare} size=\"2x\" onClick={handleCheckAll} style={{ margin: '20px auto' }} />  \n        </div>\n        <Card.Body className=\"col-10\">\n        <Card.Title className=\"display-4\">React to-do list</Card.Title>\n        <Card.Text className=\"\">\n        <input ref={taskNameRef} type=\"text\" placeholder=\"Enter task\" onKeyPress={handleKeyPress} />\n        </Card.Text>\n        <div className=\"d-flex flex-column w-100\">\n          <TodoList tasks={tasks} toggleTodo={toggleTodo} />\n          {tasks.length === 0 ? <p id=\"empty_task_message\">No tasks</p> : ''}\n        </div>\n        </Card.Body>\n        </Row>\n        </Container>\n        <Card.Footer className=\"d-flex p-1 align-items-center justify-content-center\">\n          <FontAwesomeIcon className=\"trash-icon my-2 mx-0\" icon={faAward} size=\"2x\" style={{ color: 'rgb(212,175,55)' }} />  \n          <p className=\"m-0 mx-3\">\n            <span>{tasks.filter(task => task.complete).length}/{tasks.length}</span> completed\n            </p>\n          {/* <p className=\"m-0 mx-2\">Task last completed : {tasks.filter(task => !task.complete).length} days ago</p> */}\n        </Card.Footer>\n      </Card>\n      </Row>\n    </Container>\n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}